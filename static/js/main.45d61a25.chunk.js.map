{"version":3,"sources":["sounds/correct.mp3","sounds/wrong.mp3","App.js","index.js"],"names":["module","exports","__webpack_require__","p","App","currentquestion","setcurrentQuestion","useState","score","setScore","selectOption","setSelectOption","showScore","setShowScore","timer","setTimer","useEffect","interval","setInterval","prevTime","data","length","preQues","clearInterval","React","createElement","className","onClick","question","options","map","option","index","key","correctOption","val","Audio","correct","play","wrong","handleClick","style","backgroundColor","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"23BAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6OCsFzBC,MAjFHA,KACV,MAAOC,EAAiBC,GAAsBC,mBAAS,IAChDC,EAAOC,GAAYF,mBAAS,IAC5BG,EAAcC,GAAmBJ,mBAAS,OAC1CK,EAAUC,GAAgBN,oBAAS,IACnCO,EAAMC,GAAYR,mBAAS,IAElCS,oBAAU,KACR,IAAIC,EAkBJ,OAjBGH,EAAM,IAAMF,EACbK,EAAWC,YAAY,KACrBH,EAAUI,GAAWA,EAAS,IAC9B,KAEY,IAARL,IACDT,EAAkBe,EAAKC,OAAS,GACjCf,EAAoBgB,GAAUA,EAAQ,GACtCP,EAAS,IACTJ,EAAgB,OAGhBE,GAAa,IAKZ,IAAIU,cAAcN,IACzB,CAACH,EAAMF,EAAUP,IAwBnB,OACEmB,IAAAC,cAAA,OAAKC,UAAU,YACZd,EACCY,IAAAC,cAAA,OAAKC,UAAU,iBACfF,IAAAC,cAAA,UAAI,UAAQjB,EAAM,IAAEY,EAAKC,QACzBG,IAAAC,cAAA,UAAQE,QAZd,WACErB,EAAmB,GACnBS,EAAS,IACTF,GAAa,GACbJ,EAAS,GACTE,EAAgB,QAOkB,YAGlCa,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAIL,EAAKf,GAAiBuB,UAC1BJ,IAAAC,cAAA,OAAKC,UAAU,WACZN,EAAKf,GAAiBwB,QAAQC,IAAI,CAACC,EAAQC,IACxCR,IAAAC,cAAA,UACEQ,IAAKD,EACLL,QAASA,IAnCFI,KACnBpB,EAAgBoB,GACbA,IAASX,EAAKf,GAAiB6B,eAChCzB,EAAU0B,GAAMA,EAAI,GACN,IAAIC,MAAMC,KAClBC,QAGQ,IAAIF,MAAMG,KAClBD,QA0BmBE,CAAYT,GAC3BU,MAAO,CAAEC,gBAAgBhC,IAAiBqB,EAASA,IAAWX,EAAKf,GAAiB6B,cAAgB,QAAU,MAAO,KAEpHH,KAKTP,IAAAC,cAAA,OAAKC,UAAU,SAAQ,cAAWF,IAAAC,cAAA,YAAOX,OC1EpC6B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvB,IAAAC,cAACD,IAAMwB,WAAU,KACfxB,IAAAC,cAACrB,EAAG","file":"static/js/main.45d61a25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correct.d27f45ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong.e55862ad.mp3\";","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport data from './questions.json';\nimport correct from './sounds/correct.mp3'\nimport wrong from './sounds/wrong.mp3'\nconst App = () => {\n  const [currentquestion, setcurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectOption, setSelectOption] = useState(null);\n  const [showScore,setShowScore] = useState(false);\n  const [timer,setTimer] = useState(10);\n\n  useEffect(()=>{\n    let interval;\n    if(timer>0 && !showScore){\n      interval = setInterval(()=>{\n        setTimer((prevTime)=>prevTime-1);\n      },1000);\n    }\n    else if(timer===0){\n        if(currentquestion < data.length - 1){\n          setcurrentQuestion((preQues)=>preQues+1);\n          setTimer(10);\n          setSelectOption(null);\n        }\n        else{\n          setShowScore(true);\n        }\n      \n    }\n    \n    return ()=>clearInterval(interval);\n  },[timer,showScore,currentquestion]);\n\n\n\n  const handleClick = (option) => {\n    setSelectOption(option);\n    if(option===data[currentquestion].correctOption){\n      setScore((val)=>val+1);\n      const audio = new Audio(correct);\n      audio.play();\n    }\n    else{\n      const audio = new Audio(wrong);\n      audio.play();\n    }\n  };\n\n  function restartQuiz(){\n    setcurrentQuestion(0);\n    setTimer(10);\n    setShowScore(false);\n    setScore(0);\n    setSelectOption(null);\n  }\n  return (\n    <div className='quiz-app'>\n      {showScore ? (      \n        <div className='score-section'>\n        <h3>Score: {score}/{data.length}</h3>\n        <button onClick={restartQuiz}>Restart</button>\n      </div>\n    ):(\n    <div className='question-section'>\n        <h2></h2>\n        <p>{data[currentquestion].question}</p>\n        <div className='options'>\n          {data[currentquestion].options.map((option, index) => (\n              <button\n                key={index}\n                onClick={() => handleClick(option)}\n                style={{ backgroundColor:selectOption === option ? option === data[currentquestion].correctOption ? 'green' : 'red': '',\n                }}>\n                {option}\n              </button>\n            )\n          )}\n        </div>\n        <div className='timer'>Time Left: <span>{timer}</span></div>\n      </div>\n    )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}